{
    "luahelper.source.roots": "Source roots of your project",
    "luahelper.run.mode": "Way to read the configuration: read luahelper.json under each vscode project, or read the settings of the plugin",
    "luahelper.run.json": "read luahelper.json under each vscode project",
    "luahelper.run.setting": "read the overall settings of the plugin",
    "luahelper.source.rootdir": "plugin root project dir",
    "luahelper.reference.maxNum": "Maximum number of references show(查找引用时，显示最大的引用数量)",
    "luahelper.run.lsp": "connect lsp server way(连接后端lsp server的方式)",
    "luahelper.run.cmdrpc": "local rmd rpc(默认为本地进程间连接)",
    "luahelper.run.socketrpc": "local socket rpc(调试插件的bug时，本地socket网络连接)",
    "luahelper.format.errShow": "If the format is wrong, whether to display the error(格式化有误时，是否显示错误)",
    "luahelper.reference.incudeDefine": "Whether to include definitions when displaying references(查找引用时候，是否显示定义)",
    "luahelper.lspserver.log": "Whether to open lsp server log(是否开启lsp日志，方便定位插件的bug)",
    "luahelper.colors.Enable": "Enable Global Highligth Color(是否开启变量高亮显示，若开启请设置下面的颜色)",
    "luahelper.colors.globalfield": "Global Var Color(全局变量颜色设置)",
    "luahelper.colors.globalfun": "Global Fun Color(全局方法颜色设置)",
    "luahelper.show.online": "Show online people number(显示当前插件在线人数)",
    "luahelper.show.costTime": "Show plugin startup time(显示插件启动时间)",
    "luahelper.colors.annotatetype": "Annotate Type Color(注解系统类型颜色设置)",
    "luahelper.Warn.AllEnable": "Check warn is all enable(代码检查的全局开关)",
    "luahelper.Warn.CheckSyntax": "[Warn Type:1], basic synctax check(是否开启基本基本检查)",
    "luahelper.Warn.CheckNoDefine": "[Warn Type:2], var not define check(是否开启变量未定义检查)",
    "luahelper.Warn.CheckAfterDefine": "[Warn Type:3], var define after use(是否开启全局变量先使用后定义检查)",
    "luahelper.Warn.CheckLocalNoUse": "[Warn Type:4], local var define not use(是否开启局部变量定义了未使用检查)",
    "luahelper.Warn.CheckTableDuplicateKey": "[Warn Type:5], table define duplicate key(是否开启table定义中含有重复的key)",
    "luahelper.Warn.CheckReferNoFile": "[Warn Type:6], refer file not exist(是否开启引用其他文件，文件找不到检查)",
    "luahelper.Warn.CheckAssignParamNum": "[Warn Type:7], assign statement param num error(是否开启赋值语句，参数个数不匹配检查)",
    "luahelper.Warn.CheckLocalDefineParamNum": "[Warn Type:8], local define statement param num error(是否开启局部变量定义语句，参数个数不匹配检查)",
    "luahelper.Warn.CheckGotoLable": "[Warn Type:9], goto statement find label error(是否开启goto语句，查找不对应label检查)",
    "luahelper.Warn.CheckFuncParam": "[Warn Type:10], function call param num error(是否开启函数调用时，参数个数不匹配检查)",
    "luahelper.Warn.CheckImportModuleVar": "[Warn Type:11], import other file, not find module var(是否开import其他lua文件，未找到对应的全局模块变量检查)",
    "luahelper.Warn.CheckIfNotVar": "[Warn Type:12], if not var statement, call var member error(是否开if not var语句，后面调用var成员变量检查)",
    "luahelper.Warn.CheckFunctionDuplicateParam": "[Warn Type:13], function define duplicate param(是否开函数定义参数时候，参数名重复检查)",
    "luahelper.Warn.CheckBinaryExpressionDuplicate": "[Warn Type:14], binary expression, two sides are the same(是否开启二元表达式，两边是一样的检查)",
    "luahelper.Warn.CheckErrorOrAlwaysTrue": "[Warn Type:15], or expression is always true (是否开启or表达式永远为true的检查)",
    "luahelper.Warn.CheckErrorAndAlwaysFalse": "[Warn Type:16], and expression is always false (是否开启and表达式永远为false的检查)",
    "luahelper.Warn.CheckNoUseAssign": "[Warn Type:17], local var define not use, but assign(定义了的局部变量未使用, 但是简短的赋值了)",
    "luahelper.Warn.CheckAnnotateType": "[Warn Type:18], check annotate error(是否开启注解类型的检查)"
}