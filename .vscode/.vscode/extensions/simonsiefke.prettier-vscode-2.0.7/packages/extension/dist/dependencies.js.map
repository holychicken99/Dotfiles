{"version":3,"sources":["webpack://prettier-vscode/./node_modules/source-map-support/register.js","webpack://prettier-vscode/./node_modules/source-map-support/source-map-support.js","webpack://prettier-vscode/./node_modules/source-map/lib/array-set.js","webpack://prettier-vscode/./node_modules/source-map/lib/base64-vlq.js","webpack://prettier-vscode/./node_modules/source-map/lib/base64.js","webpack://prettier-vscode/./node_modules/source-map/lib/binary-search.js","webpack://prettier-vscode/./node_modules/source-map/lib/mapping-list.js","webpack://prettier-vscode/./node_modules/source-map/lib/quick-sort.js","webpack://prettier-vscode/./node_modules/source-map/lib/source-map-consumer.js","webpack://prettier-vscode/./node_modules/source-map/lib/source-map-generator.js","webpack://prettier-vscode/./node_modules/source-map/lib/source-node.js","webpack://prettier-vscode/./node_modules/source-map/lib/util.js","webpack://prettier-vscode/./node_modules/source-map/source-map.js"],"names":["fs","SourceMapConsumer","path","existsSync","readFileSync","err","bufferFrom","dynamicRequire","mod","request","require","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","window","XMLHttpRequest","module","process","type","handlerExec","list","arg","i","length","ret","retrieveFile","supportRelativeURL","file","url","dir","dirname","match","exec","protocol","startPath","slice","test","resolve","replace","push","trim","drive","contents","xhr","open","send","readyState","status","responseText","er","retrieveSourceMap","mapSourcePosition","position","sourceMap","source","urlAndMap","map","sourcesContent","sources","forEach","originalPositionFor","originalPosition","CallSiteToString","fileName","fileLocation","this","isNative","getScriptNameOrSourceURL","isEval","getEvalOrigin","lineNumber","getLineNumber","columnNumber","getColumnNumber","line","functionName","getFunctionName","addSuffix","isConstructor","isToplevel","typeName","getTypeName","methodName","getMethodName","indexOf","cloneCallSite","frame","object","Object","getOwnPropertyNames","getPrototypeOf","name","call","toString","wrapCallSite","state","undefined","nextPosition","curPosition","getFileName","column","headerLength","version","originalFunctionName","origin","mapEvalOrigin","prepareStackTrace","error","stack","errorString","message","processedStack","reverse","join","getErrorSource","code","split","Array","printErrorAndExit","stderr","_handle","setBlocking","console","exit","sourceMapData","sourceMappingURL","fileData","sourceMapHeader","getResponseHeader","e","lastMatch","re","retrieveSourceMapURL","rawData","originalRetrieveFileHandlers","originalRetrieveMapHandlers","exports","install","options","Error","overrideRetrieveFile","unshift","overrideRetrieveSourceMap","hookRequire","Module","$compile","prototype","_compile","__sourceMapSupport","content","filename","installHandler","handleUncaughtExceptions","isMainThread","on","origEmit","emit","hasStack","arguments","hasListeners","listeners","apply","resetRetrieveHandlers","util","has","hasOwnProperty","hasNativeMap","Map","ArraySet","_array","_set","create","fromArray","aArray","aAllowDuplicates","set","len","add","size","aStr","sStr","toSetString","isDuplicate","idx","get","at","aIdx","toArray","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aIndex","aOutParam","continuation","shifted","strLen","result","shift","charCodeAt","charAt","value","rest","intToCharMap","number","TypeError","charCode","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","search","aNeedle","aHaystack","aCompare","aBias","index","recursiveSearch","aLow","aHigh","mid","Math","floor","cmp","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","sort","swap","ary","x","y","temp","doQuickSort","comparator","p","r","low","high","round","random","pivot","j","q","binarySearch","base64VLQ","quickSort","aSourceMap","aSourceMapURL","parseSourceMapInput","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","getArg","names","sourceRoot","mappings","_version","normalize","String","isAbsolute","relative","_names","_sources","_absoluteSources","s","computeSourceURL","_mappings","_sourceMapURL","Mapping","originalLine","originalColumn","lastOffset","_sections","offset","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","defineProperty","configurable","enumerable","_parseMappings","__originalMappings","_charIsMappingSeparator","c","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","allGeneratedPositionsFor","aArgs","needle","_findSourceIndex","_findMapping","compareByOriginalPositions","lastColumn","aSource","relativeSource","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","str","segment","end","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","hasContentsOfAllSources","some","sc","sourceContentFor","nullOnMissing","urlParse","fileUriAbsPath","scheme","generatedPositionFor","constructor","sectionIndex","section","bias","every","generatedPosition","sectionMappings","adjustedMapping","SourceMapGenerator","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","original","addMapping","sourceFile","sourceRelative","setSourceContent","_validateMapping","aSourceFile","aSourceContent","keys","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aName","JSON","stringify","_serializeMappings","next","nameIdx","sourceIdx","previousGeneratedLine","aSources","key","toJSON","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","node","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","nextLine","substr","addMappingWithCode","splice","aChunk","isArray","chunk","prepend","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","auth","host","port","urlGenerate","aParsedUrl","aPath","part","parts","up","aRoot","aPathUrl","aRootUrl","joined","level","lastIndexOf","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated","parse","sourceURL","sourceMapURL","parsed","substring"],"mappings":"gEAAA,mB,0BCAA,IAGIA,EAHAC,EAAoB,WACpBC,EAAO,EAAQ,MAGnB,KACEF,EAAK,EAAQ,OACLG,YAAeH,EAAGI,eAExBJ,EAAK,MAEP,MAAOK,IAIT,IAAIC,EAAa,EAAQ,MAQzB,SAASC,EAAeC,EAAKC,GAC3B,OAAOD,EAAIE,QAAQD,GAIrB,IAAIE,GAA0B,EAC1BC,GAAwB,EAGxBC,GAA8B,EAG9BC,EAAc,OAGdC,EAAoB,GAGpBC,EAAiB,GAGjBC,EAAc,sCAGdC,EAAuB,GACvBC,EAAsB,GAE1B,SAASC,IACP,MAAoB,YAAhBN,GAEgB,SAAhBA,IAEuB,oBAAXO,QAAsD,mBAAnBC,kBAAoCD,OAAOX,SAAWW,OAAOE,QAAUF,OAAOG,SAAmC,aAAxBH,OAAOG,QAAQC,OAO7J,SAASC,EAAYC,GACnB,OAAO,SAASC,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,IAAIE,EAAMJ,EAAKE,GAAGD,GAClB,GAAIG,EACF,OAAOA,EAGX,OAAO,MAIX,IAAIC,EAAeN,EAAYR,GAwC/B,SAASe,EAAmBC,EAAMC,GAChC,IAAKD,EAAM,OAAOC,EAClB,IAAIC,EAAMlC,EAAKmC,QAAQH,GACnBI,EAAQ,kBAAkBC,KAAKH,GAC/BI,EAAWF,EAAQA,EAAM,GAAK,GAC9BG,EAAYL,EAAIM,MAAMF,EAASV,QACnC,OAAIU,GAAY,UAAUG,KAAKF,IAE7BD,GAAY,KACMtC,EAAK0C,QAAQR,EAAIM,MAAMF,EAASV,QAASK,GAAKU,QAAQ,MAAO,KAE1EL,EAAWtC,EAAK0C,QAAQR,EAAIM,MAAMF,EAASV,QAASK,GAjD7DjB,EAAqB4B,MAAK,SAAS5C,GAWjC,GATAA,EAAOA,EAAK6C,OACR,SAASJ,KAAKzC,KAEhBA,EAAOA,EAAK2C,QAAQ,qBAAqB,SAASL,EAAUQ,GAC1D,OAAOA,EACL,GACA,QAGF9C,KAAQa,EACV,OAAOA,EAAkBb,GAG3B,IAAI+C,EAAW,GACf,IACE,GAAKjD,EAQMA,EAAGG,WAAWD,KAEvB+C,EAAWjD,EAAGI,aAAaF,EAAM,aAV1B,CAEP,IAAIgD,EAAM,IAAI5B,eACd4B,EAAIC,KAAK,MAAOjD,GAAmB,GACnCgD,EAAIE,KAAK,MACc,IAAnBF,EAAIG,YAAmC,MAAfH,EAAII,SAC9BL,EAAWC,EAAIK,eAMnB,MAAOC,IAIT,OAAOzC,EAAkBb,GAAQ+C,KAuDnC,IAAIQ,EAAoB/B,EAAYP,GA4BpC,SAASuC,EAAkBC,GACzB,IAAIC,EAAY5C,EAAe2C,EAASE,QACxC,IAAKD,EAAW,CAEd,IAAIE,EAAYL,EAAkBE,EAASE,QACvCC,GACFF,EAAY5C,EAAe2C,EAASE,QAAU,CAC5C1B,IAAK2B,EAAU3B,IACf4B,IAAK,IAAI9D,EAAkB6D,EAAUC,OAKzBA,IAAIC,gBAChBJ,EAAUG,IAAIE,QAAQC,SAAQ,SAASL,EAAQhC,GAC7C,IAAIoB,EAAWW,EAAUG,IAAIC,eAAenC,GAC5C,GAAIoB,EAAU,CACZ,IAAId,EAAMF,EAAmB2B,EAAUzB,IAAK0B,GAC5C9C,EAAkBoB,GAAOc,MAK/BW,EAAY5C,EAAe2C,EAASE,QAAU,CAC5C1B,IAAK,KACL4B,IAAK,MAMX,GAAIH,GAAaA,EAAUG,KAAoD,mBAAtCH,EAAUG,IAAII,oBAAoC,CACzF,IAAIC,EAAmBR,EAAUG,IAAII,oBAAoBR,GAOzD,GAAgC,OAA5BS,EAAiBP,OAGnB,OAFAO,EAAiBP,OAAS5B,EACxB2B,EAAUzB,IAAKiC,EAAiBP,QAC3BO,EAIX,OAAOT,EAkCT,SAASU,IACP,IAAIC,EACAC,EAAe,GACnB,GAAIC,KAAKC,WACPF,EAAe,aACV,GACLD,EAAWE,KAAKE,6BACCF,KAAKG,WACpBJ,EAAeC,KAAKI,gBACpBL,GAAgB,MAIhBA,GADED,GAMc,cAElB,IAAIO,EAAaL,KAAKM,gBACtB,GAAkB,MAAdD,EAAoB,CACtBN,GAAgB,IAAMM,EACtB,IAAIE,EAAeP,KAAKQ,kBACpBD,IACFR,GAAgB,IAAMQ,IAK5B,IAAIE,EAAO,GACPC,EAAeV,KAAKW,kBACpBC,GAAY,EACZC,EAAgBb,KAAKa,gBAEzB,KADqBb,KAAKc,cAAgBD,GACxB,CAChB,IAAIE,EAAWf,KAAKgB,cAEH,oBAAbD,IACFA,EAAW,QAEb,IAAIE,EAAajB,KAAKkB,gBAClBR,GACEK,GAA8C,GAAlCL,EAAaS,QAAQJ,KACnCN,GAAQM,EAAW,KAErBN,GAAQC,EACJO,GAAcP,EAAaS,QAAQ,IAAMF,IAAeP,EAAapD,OAAS2D,EAAW3D,OAAS,IACpGmD,GAAQ,QAAUQ,EAAa,MAGjCR,GAAQM,EAAW,KAAOE,GAAc,oBAEjCJ,EACTJ,GAAQ,QAAUC,GAAgB,eACzBA,EACTD,GAAQC,GAERD,GAAQV,EACRa,GAAY,GAKd,OAHIA,IACFH,GAAQ,KAAOV,EAAe,KAEzBU,EAGT,SAASW,EAAcC,GACrB,IAAIC,EAAS,GAKb,OAJAC,OAAOC,oBAAoBD,OAAOE,eAAeJ,IAAQ3B,SAAQ,SAASgC,GACxEJ,EAAOI,GAAQ,cAAcvD,KAAKuD,GAAQ,WAAa,OAAOL,EAAMK,GAAMC,KAAKN,IAAYA,EAAMK,MAEnGJ,EAAOM,SAAW/B,EACXyB,EAGT,SAASO,EAAaR,EAAOS,GAK3B,QAHcC,IAAVD,IACFA,EAAQ,CAAEE,aAAc,KAAMC,YAAa,OAE1CZ,EAAMpB,WAEP,OADA6B,EAAMG,YAAc,KACbZ,EAMT,IAAIhC,EAASgC,EAAMa,eAAiBb,EAAMnB,2BAC1C,GAAIb,EAAQ,CACV,IAAIoB,EAAOY,EAAMf,gBACb6B,EAASd,EAAMb,kBAAoB,EAQnC4B,EADW,8EACajE,KAAKnB,QAAQqF,SAAW,EAAI,GAC3C,IAAT5B,GAAc0B,EAASC,IAAiBxF,MAAkByE,EAAMlB,WAClEgC,GAAUC,GAGZ,IAAIjD,EAAWD,EAAkB,CAC/BG,OAAQA,EACRoB,KAAMA,EACN0B,OAAQA,IAEVL,EAAMG,YAAc9C,EAEpB,IAAImD,GADJjB,EAAQD,EAAcC,IACWV,gBAWjC,OAVAU,EAAMV,gBAAkB,WACtB,OAA0B,MAAtBmB,EAAME,aACDM,IAEFR,EAAME,aAAaN,MAAQY,KAEpCjB,EAAMa,YAAc,WAAa,OAAO/C,EAASE,QACjDgC,EAAMf,cAAgB,WAAa,OAAOnB,EAASsB,MACnDY,EAAMb,gBAAkB,WAAa,OAAOrB,EAASgD,OAAS,GAC9Dd,EAAMnB,yBAA2B,WAAa,OAAOf,EAASE,QACvDgC,EAIT,IAAIkB,EAASlB,EAAMlB,UAAYkB,EAAMjB,gBACrC,OAAImC,GACFA,EA9JJ,SAASC,EAAcD,GAErB,IAAIzE,EAAQ,yCAAyCC,KAAKwE,GAC1D,GAAIzE,EAAO,CACT,IAAIqB,EAAWD,EAAkB,CAC/BG,OAAQvB,EAAM,GACd2C,MAAO3C,EAAM,GACbqE,OAAQrE,EAAM,GAAK,IAErB,MAAO,WAAaA,EAAM,GAAK,KAAOqB,EAASE,OAAS,IACtDF,EAASsB,KAAO,KAAOtB,EAASgD,OAAS,GAAK,IAKlD,OADArE,EAAQ,6BAA6BC,KAAKwE,IAEjC,WAAazE,EAAM,GAAK,KAAO0E,EAAc1E,EAAM,IAAM,IAI3DyE,EA0IIC,CAAcD,IACvBlB,EAAQD,EAAcC,IAChBjB,cAAgB,WAAa,OAAOmC,GACnClB,GAIFA,EAKT,SAASoB,EAAkBC,EAAOC,GAC5BtG,IACFE,EAAoB,GACpBC,EAAiB,IASnB,IANA,IAEIoG,GAFOF,EAAMhB,MAAQ,SAEA,MADXgB,EAAMG,SAAW,IAG3Bf,EAAQ,CAAEE,aAAc,KAAMC,YAAa,MAC3Ca,EAAiB,GACZzF,EAAIsF,EAAMrF,OAAS,EAAGD,GAAK,EAAGA,IACrCyF,EAAexE,KAAK,YAAcuD,EAAac,EAAMtF,GAAIyE,IACzDA,EAAME,aAAeF,EAAMG,YAG7B,OADAH,EAAMG,YAAcH,EAAME,aAAe,KAClCY,EAAcE,EAAeC,UAAUC,KAAK,IAIrD,SAASC,EAAeP,GACtB,IAAI5E,EAAQ,sCAAsCC,KAAK2E,EAAMC,OAC7D,GAAI7E,EAAO,CACT,IAAIuB,EAASvB,EAAM,GACf2C,GAAQ3C,EAAM,GACdqE,GAAUrE,EAAM,GAGhBW,EAAWlC,EAAkB8C,GAGjC,IAAKZ,GAAYjD,GAAMA,EAAGG,WAAW0D,GACnC,IACEZ,EAAWjD,EAAGI,aAAayD,EAAQ,QACnC,MAAOL,GACPP,EAAW,GAKf,GAAIA,EAAU,CACZ,IAAIyE,EAAOzE,EAAS0E,MAAM,kBAAkB1C,EAAO,GACnD,GAAIyC,EACF,OAAO7D,EAAS,IAAMoB,EAAO,KAAOyC,EAAO,KACzC,IAAIE,MAAMjB,GAAQa,KAAK,KAAO,KAItC,OAAO,KAGT,SAASK,EAAmBX,GAC1B,IAAIrD,EAAS4D,EAAeP,GAGxB1F,QAAQsG,OAAOC,SAAWvG,QAAQsG,OAAOC,QAAQC,aACnDxG,QAAQsG,OAAOC,QAAQC,aAAY,GAGjCnE,IACFoE,QAAQf,QACRe,QAAQf,MAAMrD,IAGhBoE,QAAQf,MAAMA,EAAMC,OACpB3F,QAAQ0G,KAAK,GA1Tf/G,EAAoB2B,MAAK,SAASe,GAChC,IAIIsE,EAJAC,EAtCN,SAA8BvE,GAC5B,IAAIwE,EAEJ,GAAIjH,IACD,IACE,IAAI8B,EAAM,IAAI5B,eACd4B,EAAIC,KAAK,MAAOU,GAAQ,GACxBX,EAAIE,KAAK,MACTiF,EAA8B,IAAnBnF,EAAIG,WAAmBH,EAAIK,aAAe,KAGrD,IAAI+E,EAAkBpF,EAAIqF,kBAAkB,cACtBrF,EAAIqF,kBAAkB,eAC5C,GAAID,EACF,OAAOA,EAET,MAAOE,IAKZH,EAAWrG,EAAa6B,GAKxB,IAJA,IAGI4E,EAAWnG,EAHXoG,EAAK,wHAIFpG,EAAQoG,EAAGnG,KAAK8F,IAAWI,EAAYnG,EAC9C,OAAKmG,EACEA,EAAU,GADM,KAWAE,CAAqB9E,GAC5C,IAAKuE,EAAkB,OAAO,KAI9B,GAAInH,EAAY0B,KAAKyF,GAAmB,CAEtC,IAAIQ,EAAUR,EAAiB1F,MAAM0F,EAAiBzC,QAAQ,KAAO,GACrEwC,EAAgB7H,EAAWsI,EAAS,UAAUxC,WAC9CgC,EAAmBvE,OAGnBuE,EAAmBnG,EAAmB4B,EAAQuE,GAC9CD,EAAgBnG,EAAaoG,GAG/B,OAAKD,EAIE,CACLhG,IAAKiG,EACLrE,IAAKoE,GALE,QA4TX,IAAIU,EAA+B3H,EAAqBwB,MAAM,GAC1DoG,EAA8B3H,EAAoBuB,MAAM,GAE5DqG,EAAQ1C,aAAeA,EACvB0C,EAAQtB,eAAiBA,EACzBsB,EAAQrF,kBAAoBA,EAC5BqF,EAAQtF,kBAAoBA,EAE5BsF,EAAQC,QAAU,SAASC,GAGzB,IAFAA,EAAUA,GAAW,IAETnI,cACVA,EAAcmI,EAAQnI,aACoC,IAAtD,CAAC,OAAQ,UAAW,QAAQ6E,QAAQ7E,IACtC,MAAM,IAAIoI,MAAM,eAAiBpI,EAAc,6DAyBnD,GAnBImI,EAAQjH,eACNiH,EAAQE,uBACVjI,EAAqBY,OAAS,GAGhCZ,EAAqBkI,QAAQH,EAAQjH,eAKnCiH,EAAQxF,oBACNwF,EAAQI,4BACVlI,EAAoBW,OAAS,GAG/BX,EAAoBiI,QAAQH,EAAQxF,oBAIlCwF,EAAQK,cAAgBlI,IAAe,CAEzC,IAAImI,EAAShJ,EAAegB,EAAQ,UAChCiI,EAAWD,EAAOE,UAAUC,SAE3BF,EAASG,qBACZJ,EAAOE,UAAUC,SAAW,SAASE,EAASC,GAG5C,OAFA9I,EAAkB8I,GAAYD,EAC9B5I,EAAe6I,QAAYtD,EACpBiD,EAASrD,KAAK3B,KAAMoF,EAASC,IAGtCN,EAAOE,UAAUC,SAASC,oBAAqB,GAgBnD,GAXK9I,IACHA,EAA8B,gCAAiCoI,GAC7DA,EAAQpI,6BAIPF,IACHA,GAA0B,EAC1BuI,MAAMjC,kBAAoBA,IAGvBrG,EAAuB,CAC1B,IAAIkJ,IAAiB,6BAA8Bb,IACjDA,EAAQc,yBAKV,KAGsC,IADfxJ,EAAegB,EAAQ,kBACzByI,eACjBF,GAAiB,GAEnB,MAAMtB,IASJsB,GAjhBsB,iBAAZtI,SAAsC,OAAZA,SAA4C,mBAAfA,QAAQyI,KAkhB3ErJ,GAAwB,EA1GxBsJ,EAAW1I,QAAQ2I,KAEvB3I,QAAQ2I,KAAO,SAAU1I,GACvB,GAAa,sBAATA,EAA8B,CAChC,IAAI2I,EAAYC,UAAU,IAAMA,UAAU,GAAGlD,MACzCmD,EAAgB9F,KAAK+F,UAAU9I,GAAMK,OAAS,EAElD,GAAIsI,IAAaE,EACf,OAAOzC,EAAkBwC,UAAU,IAIvC,OAAOH,EAASM,MAAMhG,KAAM6F,aAbhC,IACMH,GAgHNnB,EAAQ0B,sBAAwB,WAC9BvJ,EAAqBY,OAAS,EAC9BX,EAAoBW,OAAS,EAE7BZ,EAAuB2H,EAA6BnG,MAAM,GAC1DvB,EAAsB2H,EAA4BpG,MAAM,GAExDe,EAAoB/B,EAAYP,GAChCa,EAAeN,EAAYR,K,eCnlB7B,IAAIwJ,EAAO,EAAQ,MACfC,EAAM5E,OAAO0D,UAAUmB,eACvBC,EAA8B,oBAARC,IAQ1B,SAASC,IACPvG,KAAKwG,OAAS,GACdxG,KAAKyG,KAAOJ,EAAe,IAAIC,IAAQ/E,OAAOmF,OAAO,MAMvDH,EAASI,UAAY,SAA4BC,EAAQC,GAEvD,IADA,IAAIC,EAAM,IAAIP,EACLlJ,EAAI,EAAG0J,EAAMH,EAAOtJ,OAAQD,EAAI0J,EAAK1J,IAC5CyJ,EAAIE,IAAIJ,EAAOvJ,GAAIwJ,GAErB,OAAOC,GASTP,EAAStB,UAAUgC,KAAO,WACxB,OAAOZ,EAAerG,KAAKyG,KAAKQ,KAAO1F,OAAOC,oBAAoBxB,KAAKyG,MAAMnJ,QAQ/EiJ,EAAStB,UAAU+B,IAAM,SAAsBE,EAAML,GACnD,IAAIM,EAAOd,EAAea,EAAOhB,EAAKkB,YAAYF,GAC9CG,EAAchB,EAAerG,KAAKmG,IAAIe,GAAQf,EAAIxE,KAAK3B,KAAKyG,KAAMU,GAClEG,EAAMtH,KAAKwG,OAAOlJ,OACjB+J,IAAeR,GAClB7G,KAAKwG,OAAOlI,KAAK4I,GAEdG,IACChB,EACFrG,KAAKyG,KAAKK,IAAII,EAAMI,GAEpBtH,KAAKyG,KAAKU,GAAQG,IAUxBf,EAAStB,UAAUkB,IAAM,SAAsBe,GAC7C,GAAIb,EACF,OAAOrG,KAAKyG,KAAKN,IAAIe,GAErB,IAAIC,EAAOjB,EAAKkB,YAAYF,GAC5B,OAAOf,EAAIxE,KAAK3B,KAAKyG,KAAMU,IAS/BZ,EAAStB,UAAU9D,QAAU,SAA0B+F,GACrD,GAAIb,EAAc,CAChB,IAAIiB,EAAMtH,KAAKyG,KAAKc,IAAIL,GACxB,GAAII,GAAO,EACP,OAAOA,MAEN,CACL,IAAIH,EAAOjB,EAAKkB,YAAYF,GAC5B,GAAIf,EAAIxE,KAAK3B,KAAKyG,KAAMU,GACtB,OAAOnH,KAAKyG,KAAKU,GAIrB,MAAM,IAAIzC,MAAM,IAAMwC,EAAO,yBAQ/BX,EAAStB,UAAUuC,GAAK,SAAqBC,GAC3C,GAAIA,GAAQ,GAAKA,EAAOzH,KAAKwG,OAAOlJ,OAClC,OAAO0C,KAAKwG,OAAOiB,GAErB,MAAM,IAAI/C,MAAM,yBAA2B+C,IAQ7ClB,EAAStB,UAAUyC,QAAU,WAC3B,OAAO1H,KAAKwG,OAAOtI,SAGrBqG,EAAQ,EAAWgC,G,eCnFnB,IAAIoB,EAAS,EAAQ,MAsDrBpD,EAAQqD,OAAS,SAA0BC,GACzC,IACIC,EADAC,EAAU,GAGVC,EA3BN,SAAqBH,GACnB,OAAOA,EAAS,EACO,IAAhBA,GAAW,GACE,GAAfA,GAAU,GAwBLI,CAAYJ,GAEtB,GACEC,EAzCgBI,GAyCRF,GACRA,KAhDiB,GAiDP,IAGRF,GAjDS,IAmDXC,GAAWJ,EAAOC,OAAOE,SAClBE,EAAM,GAEf,OAAOD,GAOTxD,EAAQ4D,OAAS,SAA0BjB,EAAMkB,EAAQC,GACvD,IAGIC,EAAcR,EAvCGD,EAEjBU,EAkCAC,EAAStB,EAAK5J,OACdmL,EAAS,EACTC,EAAQ,EAGZ,EAAG,CACD,GAAIN,GAAUI,EACZ,MAAM,IAAI9D,MAAM,8CAIlB,IAAe,KADfoD,EAAQH,EAAOQ,OAAOjB,EAAKyB,WAAWP,OAEpC,MAAM,IAAI1D,MAAM,yBAA2BwC,EAAK0B,OAAOR,EAAS,IAGlEE,KA7EW,GA6EOR,GAElBW,IADAX,GA3EgBI,KA4EYQ,EAC5BA,GAnFiB,QAoFVJ,GAETD,EAAUQ,OAvDNN,GAFiBV,EAyDWY,IAvDR,EADU,IAAP,EAATZ,IAGbU,EACDA,GAqDJF,EAAUS,KAAOV,I,aCnInB,IAAIW,EAAe,mEAAmE5F,MAAM,IAK5FoB,EAAQqD,OAAS,SAAUoB,GACzB,GAAI,GAAKA,GAAUA,EAASD,EAAazL,OACvC,OAAOyL,EAAaC,GAEtB,MAAM,IAAIC,UAAU,6BAA+BD,IAOrDzE,EAAQ4D,OAAS,SAAUe,GAiBzB,OAhBW,IAgBCA,GAAYA,GAfb,GAgBDA,EAjBC,GAGG,IAkBCA,GAAYA,GAjBb,IAkBJA,EAnBI,GASK,GANR,IAoBCA,GAAYA,GAnBb,GAoBDA,EArBC,GAOQ,GAJR,IAsBPA,EACK,GAtBG,IA0BRA,EACK,IAID,I,aC1DV3E,EAAQ4E,qBAAuB,EAC/B5E,EAAQ6E,kBAAoB,EAgF5B7E,EAAQ8E,OAAS,SAAgBC,EAASC,EAAWC,EAAUC,GAC7D,GAAyB,IAArBF,EAAUjM,OACZ,OAAQ,EAGV,IAAIoM,EAtEN,SAASC,EAAgBC,EAAMC,EAAOP,EAASC,EAAWC,EAAUC,GAUlE,IAAIK,EAAMC,KAAKC,OAAOH,EAAQD,GAAQ,GAAKA,EACvCK,EAAMT,EAASF,EAASC,EAAUO,IAAM,GAC5C,OAAY,IAARG,EAEKH,EAEAG,EAAM,EAETJ,EAAQC,EAAM,EAETH,EAAgBG,EAAKD,EAAOP,EAASC,EAAWC,EAAUC,GAK/DA,GAASlF,EAAQ6E,kBACZS,EAAQN,EAAUjM,OAASuM,GAAS,EAEpCC,EAKLA,EAAMF,EAAO,EAERD,EAAgBC,EAAME,EAAKR,EAASC,EAAWC,EAAUC,GAI9DA,GAASlF,EAAQ6E,kBACZU,EAEAF,EAAO,GAAK,EAAIA,EA4BfD,EAAiB,EAAGJ,EAAUjM,OAAQgM,EAASC,EAC/BC,EAAUC,GAASlF,EAAQ4E,sBACvD,GAAIO,EAAQ,EACV,OAAQ,EAMV,KAAOA,EAAQ,GAAK,GAC6C,IAA3DF,EAASD,EAAUG,GAAQH,EAAUG,EAAQ,IAAI,MAGnDA,EAGJ,OAAOA,I,eCtGT,IAAIxD,EAAO,EAAQ,MAqBnB,SAASgE,IACPlK,KAAKwG,OAAS,GACdxG,KAAKmK,SAAU,EAEfnK,KAAKoK,MAAQ,CAACC,eAAgB,EAAGC,gBAAiB,GASpDJ,EAAYjF,UAAUsF,gBACpB,SAA6BC,EAAWC,GACtCzK,KAAKwG,OAAO9G,QAAQ8K,EAAWC,IAQnCP,EAAYjF,UAAU+B,IAAM,SAAyB0D,GAtCrD,IAAgCC,EAAUC,EAEpCC,EACAC,EACAC,EACAC,EAL0BL,EAuCH3K,KAAKoK,MAvCQQ,EAuCDF,EArCnCG,EAAQF,EAASN,cACjBS,EAAQF,EAASP,cACjBU,EAAUJ,EAASL,gBACnBU,EAAUJ,EAASN,gBAChBQ,EAAQD,GAASC,GAASD,GAASG,GAAWD,GAC9C7E,EAAK+E,oCAAoCN,EAAUC,IAAa,GAiCrE5K,KAAKoK,MAAQM,EACb1K,KAAKwG,OAAOlI,KAAKoM,KAEjB1K,KAAKmK,SAAU,EACfnK,KAAKwG,OAAOlI,KAAKoM,KAarBR,EAAYjF,UAAUyC,QAAU,WAK9B,OAJK1H,KAAKmK,UACRnK,KAAKwG,OAAO0E,KAAKhF,EAAK+E,qCACtBjL,KAAKmK,SAAU,GAEVnK,KAAKwG,QAGdjC,EAAQ,EAAc2F,G,aCnDtB,SAASiB,EAAKC,EAAKC,EAAGC,GACpB,IAAIC,EAAOH,EAAIC,GACfD,EAAIC,GAAKD,EAAIE,GACbF,EAAIE,GAAKC,EA2BX,SAASC,EAAYJ,EAAKK,EAAYC,EAAGC,GAKvC,GAAID,EAAIC,EAAG,CAYT,IACItO,EAAIqO,EAAI,EAEZP,EAAKC,GApCiBQ,EAiCYF,EAjCPG,EAiCUF,EAhChC5B,KAAK+B,MAAMF,EAAO7B,KAAKgC,UAAYF,EAAOD,KAmCzBD,GAStB,IARA,IAAIK,EAAQZ,EAAIO,GAQPM,EAAIP,EAAGO,EAAIN,EAAGM,IACjBR,EAAWL,EAAIa,GAAID,IAAU,GAE/Bb,EAAKC,EADL/N,GAAK,EACQ4O,GAIjBd,EAAKC,EAAK/N,EAAI,EAAG4O,GACjB,IAAIC,EAAI7O,EAAI,EAIZmO,EAAYJ,EAAKK,EAAYC,EAAGQ,EAAI,GACpCV,EAAYJ,EAAKK,EAAYS,EAAI,EAAGP,GA1DxC,IAA0BC,EAAKC,EAsE/BtH,EAAQ,EAAY,SAAU6G,EAAKK,GACjCD,EAAYJ,EAAKK,EAAY,EAAGL,EAAI9N,OAAS,K,mBCzG3C4I,EAAO,EAAQ,MACfiG,EAAe,EAAQ,MACvB5F,EAAW,UACX6F,EAAY,EAAQ,MACpBC,EAAY,UAEhB,SAAS5Q,EAAkB6Q,EAAYC,GACrC,IAAInN,EAAYkN,EAKhB,MAJ0B,iBAAfA,IACTlN,EAAY8G,EAAKsG,oBAAoBF,IAGV,MAAtBlN,EAAUqN,SACb,IAAIC,EAAyBtN,EAAWmN,GACxC,IAAII,EAAuBvN,EAAWmN,GA0Q5C,SAASI,EAAuBL,EAAYC,GAC1C,IAAInN,EAAYkN,EACU,iBAAfA,IACTlN,EAAY8G,EAAKsG,oBAAoBF,IAGvC,IAAIjK,EAAU6D,EAAK0G,OAAOxN,EAAW,WACjCK,EAAUyG,EAAK0G,OAAOxN,EAAW,WAGjCyN,EAAQ3G,EAAK0G,OAAOxN,EAAW,QAAS,IACxC0N,EAAa5G,EAAK0G,OAAOxN,EAAW,aAAc,MAClDI,EAAiB0G,EAAK0G,OAAOxN,EAAW,iBAAkB,MAC1D2N,EAAW7G,EAAK0G,OAAOxN,EAAW,YAClC1B,EAAOwI,EAAK0G,OAAOxN,EAAW,OAAQ,MAI1C,GAAIiD,GAAWrC,KAAKgN,SAClB,MAAM,IAAItI,MAAM,wBAA0BrC,GAGxCyK,IACFA,EAAa5G,EAAK+G,UAAUH,IAG9BrN,EAAUA,EACPF,IAAI2N,QAIJ3N,IAAI2G,EAAK+G,WAKT1N,KAAI,SAAUF,GACb,OAAOyN,GAAc5G,EAAKiH,WAAWL,IAAe5G,EAAKiH,WAAW9N,GAChE6G,EAAKkH,SAASN,EAAYzN,GAC1BA,KAORW,KAAKqN,OAAS9G,EAASI,UAAUkG,EAAMtN,IAAI2N,SAAS,GACpDlN,KAAKsN,SAAW/G,EAASI,UAAUlH,GAAS,GAE5CO,KAAKuN,iBAAmBvN,KAAKsN,SAAS5F,UAAUnI,KAAI,SAAUiO,GAC5D,OAAOtH,EAAKuH,iBAAiBX,EAAYU,EAAGjB,MAG9CvM,KAAK8M,WAAaA,EAClB9M,KAAKR,eAAiBA,EACtBQ,KAAK0N,UAAYX,EACjB/M,KAAK2N,cAAgBpB,EACrBvM,KAAKtC,KAAOA,EA4Gd,SAASkQ,IACP5N,KAAKqK,cAAgB,EACrBrK,KAAKsK,gBAAkB,EACvBtK,KAAKX,OAAS,KACdW,KAAK6N,aAAe,KACpB7N,KAAK8N,eAAiB,KACtB9N,KAAK0B,KAAO,KAkad,SAASgL,EAAyBJ,EAAYC,GAC5C,IAAInN,EAAYkN,EACU,iBAAfA,IACTlN,EAAY8G,EAAKsG,oBAAoBF,IAGvC,IAAIjK,EAAU6D,EAAK0G,OAAOxN,EAAW,WACjCqN,EAAWvG,EAAK0G,OAAOxN,EAAW,YAEtC,GAAIiD,GAAWrC,KAAKgN,SAClB,MAAM,IAAItI,MAAM,wBAA0BrC,GAG5CrC,KAAKsN,SAAW,IAAI/G,EACpBvG,KAAKqN,OAAS,IAAI9G,EAElB,IAAIwH,EAAa,CACftN,MAAO,EACP0B,OAAQ,GAEVnC,KAAKgO,UAAYvB,EAASlN,KAAI,SAAUiO,GACtC,GAAIA,EAAE7P,IAGJ,MAAM,IAAI+G,MAAM,sDAElB,IAAIuJ,EAAS/H,EAAK0G,OAAOY,EAAG,UACxBU,EAAahI,EAAK0G,OAAOqB,EAAQ,QACjCE,EAAejI,EAAK0G,OAAOqB,EAAQ,UAEvC,GAAIC,EAAaH,EAAWtN,MACvByN,IAAeH,EAAWtN,MAAQ0N,EAAeJ,EAAW5L,OAC/D,MAAM,IAAIuC,MAAM,wDAIlB,OAFAqJ,EAAaE,EAEN,CACLG,gBAAiB,CAGf/D,cAAe6D,EAAa,EAC5B5D,gBAAiB6D,EAAe,GAElCE,SAAU,IAAI5S,EAAkByK,EAAK0G,OAAOY,EAAG,OAAQjB,OA/3B7D9Q,EAAkB6S,cAAgB,SAAShC,EAAYC,GACrD,OAAOI,EAAuB2B,cAAchC,EAAYC,IAM1D9Q,EAAkBwJ,UAAU+H,SAAW,EAgCvCvR,EAAkBwJ,UAAUsJ,oBAAsB,KAClDhN,OAAOiN,eAAe/S,EAAkBwJ,UAAW,qBAAsB,CACvEwJ,cAAc,EACdC,YAAY,EACZnH,IAAK,WAKH,OAJKvH,KAAKuO,qBACRvO,KAAK2O,eAAe3O,KAAK0N,UAAW1N,KAAK8M,YAGpC9M,KAAKuO,uBAIhB9S,EAAkBwJ,UAAU2J,mBAAqB,KACjDrN,OAAOiN,eAAe/S,EAAkBwJ,UAAW,oBAAqB,CACtEwJ,cAAc,EACdC,YAAY,EACZnH,IAAK,WAKH,OAJKvH,KAAK4O,oBACR5O,KAAK2O,eAAe3O,KAAK0N,UAAW1N,KAAK8M,YAGpC9M,KAAK4O,sBAIhBnT,EAAkBwJ,UAAU4J,wBAC1B,SAAkD3H,EAAMwC,GACtD,IAAIoF,EAAI5H,EAAK0B,OAAOc,GACpB,MAAa,MAANoF,GAAmB,MAANA,GAQxBrT,EAAkBwJ,UAAU0J,eAC1B,SAAyCzH,EAAM6H,GAC7C,MAAM,IAAIrK,MAAM,6CAGpBjJ,EAAkBuT,gBAAkB,EACpCvT,EAAkBwT,eAAiB,EAEnCxT,EAAkB0N,qBAAuB,EACzC1N,EAAkB2N,kBAAoB,EAkBtC3N,EAAkBwJ,UAAUiK,YAC1B,SAAuC1E,EAAW2E,EAAUC,GAC1D,IAGIrC,EAHAsC,EAAUF,GAAY,KAI1B,OAHYC,GAAU3T,EAAkBuT,iBAIxC,KAAKvT,EAAkBuT,gBACrBjC,EAAW/M,KAAKsP,mBAChB,MACF,KAAK7T,EAAkBwT,eACrBlC,EAAW/M,KAAKuP,kBAChB,MACF,QACE,MAAM,IAAI7K,MAAM,+BAGlB,IAAIoI,EAAa9M,KAAK8M,WACtBC,EAASxN,KAAI,SAAUiQ,GACrB,IAAInQ,EAA4B,OAAnBmQ,EAAQnQ,OAAkB,KAAOW,KAAKsN,SAAS9F,GAAGgI,EAAQnQ,QAEvE,MAAO,CACLA,OAFFA,EAAS6G,EAAKuH,iBAAiBX,EAAYzN,EAAQW,KAAK2N,eAGtDtD,cAAemF,EAAQnF,cACvBC,gBAAiBkF,EAAQlF,gBACzBuD,aAAc2B,EAAQ3B,aACtBC,eAAgB0B,EAAQ1B,eACxBpM,KAAuB,OAAjB8N,EAAQ9N,KAAgB,KAAO1B,KAAKqN,OAAO7F,GAAGgI,EAAQ9N,SAE7D1B,MAAMN,QAAQ8K,EAAW6E,IAyBhC5T,EAAkBwJ,UAAUwK,yBAC1B,SAAoDC,GAClD,IAAIjP,EAAOyF,EAAK0G,OAAO8C,EAAO,QAM1BC,EAAS,CACXtQ,OAAQ6G,EAAK0G,OAAO8C,EAAO,UAC3B7B,aAAcpN,EACdqN,eAAgB5H,EAAK0G,OAAO8C,EAAO,SAAU,IAI/C,GADAC,EAAOtQ,OAASW,KAAK4P,iBAAiBD,EAAOtQ,QACzCsQ,EAAOtQ,OAAS,EAClB,MAAO,GAGT,IAAI0N,EAAW,GAEXrD,EAAQ1J,KAAK6P,aAAaF,EACA3P,KAAKuP,kBACL,eACA,iBACArJ,EAAK4J,2BACL3D,EAAa/C,mBAC3C,GAAIM,GAAS,EAAG,CACd,IAAI8F,EAAUxP,KAAKuP,kBAAkB7F,GAErC,QAAqB3H,IAAjB2N,EAAMvN,OAOR,IANA,IAAI0L,EAAe2B,EAAQ3B,aAMpB2B,GAAWA,EAAQ3B,eAAiBA,GACzCd,EAASzO,KAAK,CACZmC,KAAMyF,EAAK0G,OAAO4C,EAAS,gBAAiB,MAC5CrN,OAAQ+D,EAAK0G,OAAO4C,EAAS,kBAAmB,MAChDO,WAAY7J,EAAK0G,OAAO4C,EAAS,sBAAuB,QAG1DA,EAAUxP,KAAKuP,oBAAoB7F,QASrC,IANA,IAAIoE,EAAiB0B,EAAQ1B,eAMtB0B,GACAA,EAAQ3B,eAAiBpN,GACzB+O,EAAQ1B,gBAAkBA,GAC/Bf,EAASzO,KAAK,CACZmC,KAAMyF,EAAK0G,OAAO4C,EAAS,gBAAiB,MAC5CrN,OAAQ+D,EAAK0G,OAAO4C,EAAS,kBAAmB,MAChDO,WAAY7J,EAAK0G,OAAO4C,EAAS,sBAAuB,QAG1DA,EAAUxP,KAAKuP,oBAAoB7F,GAKzC,OAAOqD,GAGXxI,EAAQ,GAAoB9I,EAgG5BkR,EAAuB1H,UAAY1D,OAAOmF,OAAOjL,EAAkBwJ,WACnE0H,EAAuB1H,UAAUoJ,SAAW5S,EAM5CkR,EAAuB1H,UAAU2K,iBAAmB,SAASI,GAC3D,IAWI3S,EAXA4S,EAAiBD,EAKrB,GAJuB,MAAnBhQ,KAAK8M,aACPmD,EAAiB/J,EAAKkH,SAASpN,KAAK8M,WAAYmD,IAG9CjQ,KAAKsN,SAASnH,IAAI8J,GACpB,OAAOjQ,KAAKsN,SAASnM,QAAQ8O,GAM/B,IAAK5S,EAAI,EAAGA,EAAI2C,KAAKuN,iBAAiBjQ,SAAUD,EAC9C,GAAI2C,KAAKuN,iBAAiBlQ,IAAM2S,EAC9B,OAAO3S,EAIX,OAAQ,GAYVsP,EAAuB2B,cACrB,SAAyChC,EAAYC,GACnD,IAAI2D,EAAM3O,OAAOmF,OAAOiG,EAAuB1H,WAE3C4H,EAAQqD,EAAI7C,OAAS9G,EAASI,UAAU2F,EAAWe,OAAO3F,WAAW,GACrEjI,EAAUyQ,EAAI5C,SAAW/G,EAASI,UAAU2F,EAAWgB,SAAS5F,WAAW,GAC/EwI,EAAIpD,WAAaR,EAAW6D,YAC5BD,EAAI1Q,eAAiB8M,EAAW8D,wBAAwBF,EAAI5C,SAAS5F,UACbwI,EAAIpD,YAC5DoD,EAAIxS,KAAO4O,EAAW+D,MACtBH,EAAIvC,cAAgBpB,EACpB2D,EAAI3C,iBAAmB2C,EAAI5C,SAAS5F,UAAUnI,KAAI,SAAUiO,GAC1D,OAAOtH,EAAKuH,iBAAiByC,EAAIpD,WAAYU,EAAGjB,MAYlD,IAJA,IAAI+D,EAAoBhE,EAAWoB,UAAUhG,UAAUxJ,QACnDqS,EAAwBL,EAAI3B,oBAAsB,GAClDiC,EAAuBN,EAAItB,mBAAqB,GAE3CvR,EAAI,EAAGC,EAASgT,EAAkBhT,OAAQD,EAAIC,EAAQD,IAAK,CAClE,IAAIoT,EAAaH,EAAkBjT,GAC/BqT,EAAc,IAAI9C,EACtB8C,EAAYrG,cAAgBoG,EAAWpG,cACvCqG,EAAYpG,gBAAkBmG,EAAWnG,gBAErCmG,EAAWpR,SACbqR,EAAYrR,OAASI,EAAQ0B,QAAQsP,EAAWpR,QAChDqR,EAAY7C,aAAe4C,EAAW5C,aACtC6C,EAAY5C,eAAiB2C,EAAW3C,eAEpC2C,EAAW/O,OACbgP,EAAYhP,KAAOmL,EAAM1L,QAAQsP,EAAW/O,OAG9C8O,EAAqBlS,KAAKoS,IAG5BH,EAAsBjS,KAAKoS,GAK7B,OAFArE,EAAU6D,EAAItB,mBAAoB1I,EAAK4J,4BAEhCI,GAMXvD,EAAuB1H,UAAU+H,SAAW,EAK5CzL,OAAOiN,eAAe7B,EAAuB1H,UAAW,UAAW,CACjEsC,IAAK,WACH,OAAOvH,KAAKuN,iBAAiBrP,WAqBjCyO,EAAuB1H,UAAU0J,eAC/B,SAAyCzH,EAAM6H,GAe7C,IAdA,IAYIS,EAASmB,EAAKC,EAASC,EAAKhI,EAZ5BwB,EAAgB,EAChByG,EAA0B,EAC1BC,EAAuB,EACvBC,EAAyB,EACzBC,EAAiB,EACjBC,EAAe,EACf5T,EAAS4J,EAAK5J,OACdoM,EAAQ,EACRyH,EAAiB,GACjB5F,EAAO,GACP6F,EAAmB,GACnBd,EAAoB,GAGjB5G,EAAQpM,GACb,GAA2B,MAAvB4J,EAAK0B,OAAOc,GACdW,IACAX,IACAoH,EAA0B,OAEvB,GAA2B,MAAvB5J,EAAK0B,OAAOc,GACnBA,QAEG,CASH,KARA8F,EAAU,IAAI5B,GACNvD,cAAgBA,EAOnBwG,EAAMnH,EAAOmH,EAAMvT,IAClB0C,KAAK6O,wBAAwB3H,EAAM2J,GADTA,KAQhC,GADAD,EAAUO,EAFVR,EAAMzJ,EAAKhJ,MAAMwL,EAAOmH,IAItBnH,GAASiH,EAAIrT,WACR,CAEL,IADAsT,EAAU,GACHlH,EAAQmH,GACbzE,EAAUjE,OAAOjB,EAAMwC,EAAO6B,GAC9B1C,EAAQ0C,EAAK1C,MACba,EAAQ6B,EAAKzC,KACb8H,EAAQtS,KAAKuK,GAGf,GAAuB,IAAnB+H,EAAQtT,OACV,MAAM,IAAIoH,MAAM,0CAGlB,GAAuB,IAAnBkM,EAAQtT,OACV,MAAM,IAAIoH,MAAM,0CAGlByM,EAAeR,GAAOC,EAIxBpB,EAAQlF,gBAAkBwG,EAA0BF,EAAQ,GAC5DE,EAA0BtB,EAAQlF,gBAE9BsG,EAAQtT,OAAS,IAEnBkS,EAAQnQ,OAAS4R,EAAiBL,EAAQ,GAC1CK,GAAkBL,EAAQ,GAG1BpB,EAAQ3B,aAAekD,EAAuBH,EAAQ,GACtDG,EAAuBvB,EAAQ3B,aAE/B2B,EAAQ3B,cAAgB,EAGxB2B,EAAQ1B,eAAiBkD,EAAyBJ,EAAQ,GAC1DI,EAAyBxB,EAAQ1B,eAE7B8C,EAAQtT,OAAS,IAEnBkS,EAAQ9N,KAAOwP,EAAeN,EAAQ,GACtCM,GAAgBN,EAAQ,KAI5BN,EAAkBhS,KAAKkR,GACa,iBAAzBA,EAAQ3B,cACjBuD,EAAiB9S,KAAKkR,GAK5BnD,EAAUiE,EAAmBpK,EAAKmL,qCAClCrR,KAAKuO,oBAAsB+B,EAE3BjE,EAAU+E,EAAkBlL,EAAK4J,4BACjC9P,KAAK4O,mBAAqBwC,GAO9BzE,EAAuB1H,UAAU4K,aAC/B,SAAuCvG,EAASgI,EAAWC,EACpBC,EAAaC,EAAahI,GAM/D,GAAIH,EAAQiI,IAAc,EACxB,MAAM,IAAItI,UAAU,gDACEK,EAAQiI,IAEhC,GAAIjI,EAAQkI,GAAe,EACzB,MAAM,IAAIvI,UAAU,kDACEK,EAAQkI,IAGhC,OAAOrF,EAAa9C,OAAOC,EAASgI,EAAWG,EAAahI,IAOhEkD,EAAuB1H,UAAUyM,mBAC/B,WACE,IAAK,IAAIhI,EAAQ,EAAGA,EAAQ1J,KAAKsP,mBAAmBhS,SAAUoM,EAAO,CACnE,IAAI8F,EAAUxP,KAAKsP,mBAAmB5F,GAMtC,GAAIA,EAAQ,EAAI1J,KAAKsP,mBAAmBhS,OAAQ,CAC9C,IAAIqU,EAAc3R,KAAKsP,mBAAmB5F,EAAQ,GAElD,GAAI8F,EAAQnF,gBAAkBsH,EAAYtH,cAAe,CACvDmF,EAAQoC,oBAAsBD,EAAYrH,gBAAkB,EAC5D,UAKJkF,EAAQoC,oBAAsBC,MA4BpClF,EAAuB1H,UAAUtF,oBAC/B,SAA+C+P,GAC7C,IAAIC,EAAS,CACXtF,cAAenE,EAAK0G,OAAO8C,EAAO,QAClCpF,gBAAiBpE,EAAK0G,OAAO8C,EAAO,WAGlChG,EAAQ1J,KAAK6P,aACfF,EACA3P,KAAKsP,mBACL,gBACA,kBACApJ,EAAKmL,oCACLnL,EAAK0G,OAAO8C,EAAO,OAAQjU,EAAkB0N,uBAG/C,GAAIO,GAAS,EAAG,CACd,IAAI8F,EAAUxP,KAAKsP,mBAAmB5F,GAEtC,GAAI8F,EAAQnF,gBAAkBsF,EAAOtF,cAAe,CAClD,IAAIhL,EAAS6G,EAAK0G,OAAO4C,EAAS,SAAU,MAC7B,OAAXnQ,IACFA,EAASW,KAAKsN,SAAS9F,GAAGnI,GAC1BA,EAAS6G,EAAKuH,iBAAiBzN,KAAK8M,WAAYzN,EAAQW,KAAK2N,gBAE/D,IAAIjM,EAAOwE,EAAK0G,OAAO4C,EAAS,OAAQ,MAIxC,OAHa,OAAT9N,IACFA,EAAO1B,KAAKqN,OAAO7F,GAAG9F,IAEjB,CACLrC,OAAQA,EACRoB,KAAMyF,EAAK0G,OAAO4C,EAAS,eAAgB,MAC3CrN,OAAQ+D,EAAK0G,OAAO4C,EAAS,iBAAkB,MAC/C9N,KAAMA,IAKZ,MAAO,CACLrC,OAAQ,KACRoB,KAAM,KACN0B,OAAQ,KACRT,KAAM,OAQZiL,EAAuB1H,UAAU6M,wBAC/B,WACE,QAAK9R,KAAKR,iBAGHQ,KAAKR,eAAelC,QAAU0C,KAAKsN,SAASrG,SAChDjH,KAAKR,eAAeuS,MAAK,SAAUC,GAAM,OAAa,MAANA,OAQvDrF,EAAuB1H,UAAUgN,iBAC/B,SAA4CjC,EAASkC,GACnD,IAAKlS,KAAKR,eACR,OAAO,KAGT,IAAIkK,EAAQ1J,KAAK4P,iBAAiBI,GAClC,GAAItG,GAAS,EACX,OAAO1J,KAAKR,eAAekK,GAG7B,IAKI/L,EALAsS,EAAiBD,EAMrB,GALuB,MAAnBhQ,KAAK8M,aACPmD,EAAiB/J,EAAKkH,SAASpN,KAAK8M,WAAYmD,IAI3B,MAAnBjQ,KAAK8M,aACDnP,EAAMuI,EAAKiM,SAASnS,KAAK8M,aAAc,CAK7C,IAAIsF,EAAiBnC,EAAe5R,QAAQ,aAAc,IAC1D,GAAkB,QAAdV,EAAI0U,QACDrS,KAAKsN,SAASnH,IAAIiM,GACvB,OAAOpS,KAAKR,eAAeQ,KAAKsN,SAASnM,QAAQiR,IAGnD,KAAMzU,EAAIjC,MAAoB,KAAZiC,EAAIjC,OACfsE,KAAKsN,SAASnH,IAAI,IAAM8J,GAC7B,OAAOjQ,KAAKR,eAAeQ,KAAKsN,SAASnM,QAAQ,IAAM8O,IAQ3D,GAAIiC,EACF,OAAO,KAGP,MAAM,IAAIxN,MAAM,IAAMuL,EAAiB,+BA2B7CtD,EAAuB1H,UAAUqN,qBAC/B,SAAgD5C,GAC9C,IAAIrQ,EAAS6G,EAAK0G,OAAO8C,EAAO,UAEhC,IADArQ,EAASW,KAAK4P,iBAAiBvQ,IAClB,EACX,MAAO,CACLoB,KAAM,KACN0B,OAAQ,KACR4N,WAAY,MAIhB,IAAIJ,EAAS,CACXtQ,OAAQA,EACRwO,aAAc3H,EAAK0G,OAAO8C,EAAO,QACjC5B,eAAgB5H,EAAK0G,OAAO8C,EAAO,WAGjChG,EAAQ1J,KAAK6P,aACfF,EACA3P,KAAKuP,kBACL,eACA,iBACArJ,EAAK4J,2BACL5J,EAAK0G,OAAO8C,EAAO,OAAQjU,EAAkB0N,uBAG/C,GAAIO,GAAS,EAAG,CACd,IAAI8F,EAAUxP,KAAKuP,kBAAkB7F,GAErC,GAAI8F,EAAQnQ,SAAWsQ,EAAOtQ,OAC5B,MAAO,CACLoB,KAAMyF,EAAK0G,OAAO4C,EAAS,gBAAiB,MAC5CrN,OAAQ+D,EAAK0G,OAAO4C,EAAS,kBAAmB,MAChDO,WAAY7J,EAAK0G,OAAO4C,EAAS,sBAAuB,OAK9D,MAAO,CACL/O,KAAM,KACN0B,OAAQ,KACR4N,WAAY,OAuGlBrD,EAAyBzH,UAAY1D,OAAOmF,OAAOjL,EAAkBwJ,WACrEyH,EAAyBzH,UAAUsN,YAAc9W,EAKjDiR,EAAyBzH,UAAU+H,SAAW,EAK9CzL,OAAOiN,eAAe9B,EAAyBzH,UAAW,UAAW,CACnEsC,IAAK,WAEH,IADA,IAAI9H,EAAU,GACLpC,EAAI,EAAGA,EAAI2C,KAAKgO,UAAU1Q,OAAQD,IACzC,IAAK,IAAI4O,EAAI,EAAGA,EAAIjM,KAAKgO,UAAU3Q,GAAGgR,SAAS5O,QAAQnC,OAAQ2O,IAC7DxM,EAAQnB,KAAK0B,KAAKgO,UAAU3Q,GAAGgR,SAAS5O,QAAQwM,IAGpD,OAAOxM,KAuBXiN,EAAyBzH,UAAUtF,oBACjC,SAAsD+P,GACpD,IAAIC,EAAS,CACXtF,cAAenE,EAAK0G,OAAO8C,EAAO,QAClCpF,gBAAiBpE,EAAK0G,OAAO8C,EAAO,WAKlC8C,EAAerG,EAAa9C,OAAOsG,EAAQ3P,KAAKgO,WAClD,SAAS2B,EAAQ8C,GACf,IAAIxI,EAAM0F,EAAOtF,cAAgBoI,EAAQrE,gBAAgB/D,cACzD,OAAIJ,GAII0F,EAAOrF,gBACPmI,EAAQrE,gBAAgB9D,mBAEhCmI,EAAUzS,KAAKgO,UAAUwE,GAE7B,OAAKC,EASEA,EAAQpE,SAAS1O,oBAAoB,CAC1Cc,KAAMkP,EAAOtF,eACVoI,EAAQrE,gBAAgB/D,cAAgB,GAC3ClI,OAAQwN,EAAOrF,iBACZmI,EAAQrE,gBAAgB/D,gBAAkBsF,EAAOtF,cAC/CoI,EAAQrE,gBAAgB9D,gBAAkB,EAC1C,GACLoI,KAAMhD,EAAMgD,OAfL,CACLrT,OAAQ,KACRoB,KAAM,KACN0B,OAAQ,KACRT,KAAM,OAmBdgL,EAAyBzH,UAAU6M,wBACjC,WACE,OAAO9R,KAAKgO,UAAU2E,OAAM,SAAUnF,GACpC,OAAOA,EAAEa,SAASyD,8BASxBpF,EAAyBzH,UAAUgN,iBACjC,SAAmDjC,EAASkC,GAC1D,IAAK,IAAI7U,EAAI,EAAGA,EAAI2C,KAAKgO,UAAU1Q,OAAQD,IAAK,CAC9C,IAEI+H,EAFUpF,KAAKgO,UAAU3Q,GAEPgR,SAAS4D,iBAAiBjC,GAAS,GACzD,GAAI5K,EACF,OAAOA,EAGX,GAAI8M,EACF,OAAO,KAGP,MAAM,IAAIxN,MAAM,IAAMsL,EAAU,+BAsBtCtD,EAAyBzH,UAAUqN,qBACjC,SAAuD5C,GACrD,IAAK,IAAIrS,EAAI,EAAGA,EAAI2C,KAAKgO,UAAU1Q,OAAQD,IAAK,CAC9C,IAAIoV,EAAUzS,KAAKgO,UAAU3Q,GAI7B,IAAyE,IAArEoV,EAAQpE,SAASuB,iBAAiB1J,EAAK0G,OAAO8C,EAAO,WAAzD,CAGA,IAAIkD,EAAoBH,EAAQpE,SAASiE,qBAAqB5C,GAC9D,GAAIkD,EASF,MARU,CACRnS,KAAMmS,EAAkBnS,MACrBgS,EAAQrE,gBAAgB/D,cAAgB,GAC3ClI,OAAQyQ,EAAkBzQ,QACvBsQ,EAAQrE,gBAAgB/D,gBAAkBuI,EAAkBnS,KAC1DgS,EAAQrE,gBAAgB9D,gBAAkB,EAC1C,KAMX,MAAO,CACL7J,KAAM,KACN0B,OAAQ,OASduK,EAAyBzH,UAAU0J,eACjC,SAAgDzH,EAAM6H,GACpD/O,KAAKuO,oBAAsB,GAC3BvO,KAAK4O,mBAAqB,GAC1B,IAAK,IAAIvR,EAAI,EAAGA,EAAI2C,KAAKgO,UAAU1Q,OAAQD,IAGzC,IAFA,IAAIoV,EAAUzS,KAAKgO,UAAU3Q,GACzBwV,EAAkBJ,EAAQpE,SAASiB,mBAC9BrD,EAAI,EAAGA,EAAI4G,EAAgBvV,OAAQ2O,IAAK,CAC/C,IAAIuD,EAAUqD,EAAgB5G,GAE1B5M,EAASoT,EAAQpE,SAASf,SAAS9F,GAAGgI,EAAQnQ,QAClDA,EAAS6G,EAAKuH,iBAAiBgF,EAAQpE,SAASvB,WAAYzN,EAAQW,KAAK2N,eACzE3N,KAAKsN,SAAStG,IAAI3H,GAClBA,EAASW,KAAKsN,SAASnM,QAAQ9B,GAE/B,IAAIqC,EAAO,KACP8N,EAAQ9N,OACVA,EAAO+Q,EAAQpE,SAAShB,OAAO7F,GAAGgI,EAAQ9N,MAC1C1B,KAAKqN,OAAOrG,IAAItF,GAChBA,EAAO1B,KAAKqN,OAAOlM,QAAQO,IAO7B,IAAIoR,EAAkB,CACpBzT,OAAQA,EACRgL,cAAemF,EAAQnF,eACpBoI,EAAQrE,gBAAgB/D,cAAgB,GAC3CC,gBAAiBkF,EAAQlF,iBACtBmI,EAAQrE,gBAAgB/D,gBAAkBmF,EAAQnF,cACjDoI,EAAQrE,gBAAgB9D,gBAAkB,EAC1C,GACJuD,aAAc2B,EAAQ3B,aACtBC,eAAgB0B,EAAQ1B,eACxBpM,KAAMA,GAGR1B,KAAKuO,oBAAoBjQ,KAAKwU,GACc,iBAAjCA,EAAgBjF,cACzB7N,KAAK4O,mBAAmBtQ,KAAKwU,GAKnCzG,EAAUrM,KAAKuO,oBAAqBrI,EAAKmL,qCACzChF,EAAUrM,KAAK4O,mBAAoB1I,EAAK4J,8B,eC9mC5C,IAAI1D,EAAY,EAAQ,MACpBlG,EAAO,EAAQ,MACfK,EAAW,UACX2D,EAAc,UAUlB,SAAS6I,EAAmBrD,GACrBA,IACHA,EAAQ,IAEV1P,KAAKqQ,MAAQnK,EAAK0G,OAAO8C,EAAO,OAAQ,MACxC1P,KAAKmQ,YAAcjK,EAAK0G,OAAO8C,EAAO,aAAc,MACpD1P,KAAKgT,gBAAkB9M,EAAK0G,OAAO8C,EAAO,kBAAkB,GAC5D1P,KAAKsN,SAAW,IAAI/G,EACpBvG,KAAKqN,OAAS,IAAI9G,EAClBvG,KAAK0N,UAAY,IAAIxD,EACrBlK,KAAKiT,iBAAmB,KAG1BF,EAAmB9N,UAAU+H,SAAW,EAOxC+F,EAAmBzE,cACjB,SAA0C4E,GACxC,IAAIpG,EAAaoG,EAAmBpG,WAChCqG,EAAY,IAAIJ,EAAmB,CACrCrV,KAAMwV,EAAmBxV,KACzBoP,WAAYA,IA2Cd,OAzCAoG,EAAmBhE,aAAY,SAAUM,GACvC,IAAI4D,EAAa,CACfC,UAAW,CACT5S,KAAM+O,EAAQnF,cACdlI,OAAQqN,EAAQlF,kBAIE,MAAlBkF,EAAQnQ,SACV+T,EAAW/T,OAASmQ,EAAQnQ,OACV,MAAdyN,IACFsG,EAAW/T,OAAS6G,EAAKkH,SAASN,EAAYsG,EAAW/T,SAG3D+T,EAAWE,SAAW,CACpB7S,KAAM+O,EAAQ3B,aACd1L,OAAQqN,EAAQ1B,gBAGE,MAAhB0B,EAAQ9N,OACV0R,EAAW1R,KAAO8N,EAAQ9N,OAI9ByR,EAAUI,WAAWH,MAEvBF,EAAmBzT,QAAQC,SAAQ,SAAU8T,GAC3C,IAAIC,EAAiBD,EACF,OAAf1G,IACF2G,EAAiBvN,EAAKkH,SAASN,EAAY0G,IAGxCL,EAAU7F,SAASnH,IAAIsN,IAC1BN,EAAU7F,SAAStG,IAAIyM,GAGzB,IAAIrO,EAAU8N,EAAmBjB,iBAAiBuB,GACnC,MAAXpO,GACF+N,EAAUO,iBAAiBF,EAAYpO,MAGpC+N,GAaXJ,EAAmB9N,UAAUsO,WAC3B,SAAuC7D,GACrC,IAAI2D,EAAYnN,EAAK0G,OAAO8C,EAAO,aAC/B4D,EAAWpN,EAAK0G,OAAO8C,EAAO,WAAY,MAC1CrQ,EAAS6G,EAAK0G,OAAO8C,EAAO,SAAU,MACtChO,EAAOwE,EAAK0G,OAAO8C,EAAO,OAAQ,MAEjC1P,KAAKgT,iBACRhT,KAAK2T,iBAAiBN,EAAWC,EAAUjU,EAAQqC,GAGvC,MAAVrC,IACFA,EAAS6N,OAAO7N,GACXW,KAAKsN,SAASnH,IAAI9G,IACrBW,KAAKsN,SAAStG,IAAI3H,IAIV,MAARqC,IACFA,EAAOwL,OAAOxL,GACT1B,KAAKqN,OAAOlH,IAAIzE,IACnB1B,KAAKqN,OAAOrG,IAAItF,IAIpB1B,KAAK0N,UAAU1G,IAAI,CACjBqD,cAAegJ,EAAU5S,KACzB6J,gBAAiB+I,EAAUlR,OAC3B0L,aAA0B,MAAZyF,GAAoBA,EAAS7S,KAC3CqN,eAA4B,MAAZwF,GAAoBA,EAASnR,OAC7C9C,OAAQA,EACRqC,KAAMA,KAOZqR,EAAmB9N,UAAUyO,iBAC3B,SAA6CE,EAAaC,GACxD,IAAIxU,EAASuU,EACW,MAApB5T,KAAKmQ,cACP9Q,EAAS6G,EAAKkH,SAASpN,KAAKmQ,YAAa9Q,IAGrB,MAAlBwU,GAGG7T,KAAKiT,mBACRjT,KAAKiT,iBAAmB1R,OAAOmF,OAAO,OAExC1G,KAAKiT,iBAAiB/M,EAAKkB,YAAY/H,IAAWwU,GACzC7T,KAAKiT,0BAGPjT,KAAKiT,iBAAiB/M,EAAKkB,YAAY/H,IACI,IAA9CkC,OAAOuS,KAAK9T,KAAKiT,kBAAkB3V,SACrC0C,KAAKiT,iBAAmB,QAqBhCF,EAAmB9N,UAAU8O,eAC3B,SAA2Cb,EAAoBU,EAAaI,GAC1E,IAAIR,EAAaI,EAEjB,GAAmB,MAAfA,EAAqB,CACvB,GAA+B,MAA3BV,EAAmBxV,KACrB,MAAM,IAAIgH,MACR,iJAIJ8O,EAAaN,EAAmBxV,KAElC,IAAIoP,EAAa9M,KAAKmQ,YAEJ,MAAdrD,IACF0G,EAAatN,EAAKkH,SAASN,EAAY0G,IAIzC,IAAIS,EAAa,IAAI1N,EACjB2N,EAAW,IAAI3N,EAGnBvG,KAAK0N,UAAUnD,iBAAgB,SAAUiF,GACvC,GAAIA,EAAQnQ,SAAWmU,GAAsC,MAAxBhE,EAAQ3B,aAAsB,CAEjE,IAAIyF,EAAWJ,EAAmBvT,oBAAoB,CACpDc,KAAM+O,EAAQ3B,aACd1L,OAAQqN,EAAQ1B,iBAEK,MAAnBwF,EAASjU,SAEXmQ,EAAQnQ,OAASiU,EAASjU,OACJ,MAAlB2U,IACFxE,EAAQnQ,OAAS6G,EAAKlD,KAAKgR,EAAgBxE,EAAQnQ,SAEnC,MAAdyN,IACF0C,EAAQnQ,OAAS6G,EAAKkH,SAASN,EAAY0C,EAAQnQ,SAErDmQ,EAAQ3B,aAAeyF,EAAS7S,KAChC+O,EAAQ1B,eAAiBwF,EAASnR,OACb,MAAjBmR,EAAS5R,OACX8N,EAAQ9N,KAAO4R,EAAS5R,OAK9B,IAAIrC,EAASmQ,EAAQnQ,OACP,MAAVA,GAAmB4U,EAAW9N,IAAI9G,IACpC4U,EAAWjN,IAAI3H,GAGjB,IAAIqC,EAAO8N,EAAQ9N,KACP,MAARA,GAAiBwS,EAAS/N,IAAIzE,IAChCwS,EAASlN,IAAItF,KAGd1B,MACHA,KAAKsN,SAAW2G,EAChBjU,KAAKqN,OAAS6G,EAGdhB,EAAmBzT,QAAQC,SAAQ,SAAU8T,GAC3C,IAAIpO,EAAU8N,EAAmBjB,iBAAiBuB,GACnC,MAAXpO,IACoB,MAAlB4O,IACFR,EAAatN,EAAKlD,KAAKgR,EAAgBR,IAEvB,MAAd1G,IACF0G,EAAatN,EAAKkH,SAASN,EAAY0G,IAEzCxT,KAAK0T,iBAAiBF,EAAYpO,MAEnCpF,OAcP+S,EAAmB9N,UAAU0O,iBAC3B,SAA4CQ,EAAYC,EAAWpE,EACvBqE,GAK1C,GAAID,GAAuC,iBAAnBA,EAAU3T,MAAiD,iBAArB2T,EAAUjS,OACpE,MAAM,IAAIuC,MACN,gPAMR,MAAIyP,GAAc,SAAUA,GAAc,WAAYA,GAC/CA,EAAW1T,KAAO,GAAK0T,EAAWhS,QAAU,IAC3CiS,GAAcpE,GAAYqE,MAIzBF,GAAc,SAAUA,GAAc,WAAYA,GAC/CC,GAAa,SAAUA,GAAa,WAAYA,GAChDD,EAAW1T,KAAO,GAAK0T,EAAWhS,QAAU,GAC5CiS,EAAU3T,KAAO,GAAK2T,EAAUjS,QAAU,GAC1C6N,GAKV,MAAM,IAAItL,MAAM,oBAAsB4P,KAAKC,UAAU,CACnDlB,UAAWc,EACX9U,OAAQ2Q,EACRsD,SAAUc,EACV1S,KAAM2S,MASdtB,EAAmB9N,UAAUuP,mBAC3B,WAcE,IAbA,IAOIC,EACAjF,EACAkF,EACAC,EAVA7D,EAA0B,EAC1B8D,EAAwB,EACxB5D,EAAyB,EACzBD,EAAuB,EACvBG,EAAe,EACfD,EAAiB,EACjBxI,EAAS,GAMTsE,EAAW/M,KAAK0N,UAAUhG,UACrBrK,EAAI,EAAG0J,EAAMgG,EAASzP,OAAQD,EAAI0J,EAAK1J,IAAK,CAInD,GAFAoX,EAAO,IADPjF,EAAUzC,EAAS1P,IAGPgN,gBAAkBuK,EAE5B,IADA9D,EAA0B,EACnBtB,EAAQnF,gBAAkBuK,GAC/BH,GAAQ,IACRG,SAIF,GAAIvX,EAAI,EAAG,CACT,IAAK6I,EAAK+E,oCAAoCuE,EAASzC,EAAS1P,EAAI,IAClE,SAEFoX,GAAQ,IAIZA,GAAQrI,EAAUxE,OAAO4H,EAAQlF,gBACJwG,GAC7BA,EAA0BtB,EAAQlF,gBAEZ,MAAlBkF,EAAQnQ,SACVsV,EAAY3U,KAAKsN,SAASnM,QAAQqO,EAAQnQ,QAC1CoV,GAAQrI,EAAUxE,OAAO+M,EAAY1D,GACrCA,EAAiB0D,EAGjBF,GAAQrI,EAAUxE,OAAO4H,EAAQ3B,aAAe,EACnBkD,GAC7BA,EAAuBvB,EAAQ3B,aAAe,EAE9C4G,GAAQrI,EAAUxE,OAAO4H,EAAQ1B,eACJkD,GAC7BA,EAAyBxB,EAAQ1B,eAEb,MAAhB0B,EAAQ9N,OACVgT,EAAU1U,KAAKqN,OAAOlM,QAAQqO,EAAQ9N,MACtC+S,GAAQrI,EAAUxE,OAAO8M,EAAUxD,GACnCA,EAAewD,IAInBjM,GAAUgM,EAGZ,OAAOhM,GAGXsK,EAAmB9N,UAAUmL,wBAC3B,SAAmDyE,EAAU9F,GAC3D,OAAO8F,EAAStV,KAAI,SAAUF,GAC5B,IAAKW,KAAKiT,iBACR,OAAO,KAEU,MAAflE,IACF1P,EAAS6G,EAAKkH,SAAS2B,EAAa1P,IAEtC,IAAIyV,EAAM5O,EAAKkB,YAAY/H,GAC3B,OAAOkC,OAAO0D,UAAUmB,eAAezE,KAAK3B,KAAKiT,iBAAkB6B,GAC/D9U,KAAKiT,iBAAiB6B,GACtB,OACH9U,OAMP+S,EAAmB9N,UAAU8P,OAC3B,WACE,IAAIxV,EAAM,CACR8C,QAASrC,KAAKgN,SACdvN,QAASO,KAAKsN,SAAS5F,UACvBmF,MAAO7M,KAAKqN,OAAO3F,UACnBqF,SAAU/M,KAAKwU,sBAYjB,OAVkB,MAAdxU,KAAKqQ,QACP9Q,EAAI7B,KAAOsC,KAAKqQ,OAEM,MAApBrQ,KAAKmQ,cACP5Q,EAAIuN,WAAa9M,KAAKmQ,aAEpBnQ,KAAKiT,mBACP1T,EAAIC,eAAiBQ,KAAKoQ,wBAAwB7Q,EAAIE,QAASF,EAAIuN,aAG9DvN,GAMXwT,EAAmB9N,UAAUrD,SAC3B,WACE,OAAO0S,KAAKC,UAAUvU,KAAK+U,WAG/BxQ,EAAQ,EAAqBwO,G,eCja7B,IAAIA,EAAqB,UACrB7M,EAAO,EAAQ,MAIf8O,EAAgB,UAQhBC,EAAe,qBAcnB,SAASC,EAAWC,EAAOC,EAASpF,EAASqF,EAAShB,GACpDrU,KAAKsV,SAAW,GAChBtV,KAAKuV,eAAiB,GACtBvV,KAAKS,KAAgB,MAAT0U,EAAgB,KAAOA,EACnCnV,KAAKmC,OAAoB,MAAXiT,EAAkB,KAAOA,EACvCpV,KAAKX,OAAoB,MAAX2Q,EAAkB,KAAOA,EACvChQ,KAAK0B,KAAgB,MAAT2S,EAAgB,KAAOA,EACnCrU,KAAKiV,IAAgB,EACN,MAAXI,GAAiBrV,KAAKgH,IAAIqO,GAWhCH,EAAWM,wBACT,SAA4CC,EAAgBvC,EAAoBwC,GAG9E,IAAIC,EAAO,IAAIT,EAMXU,EAAiBH,EAAetS,MAAM6R,GACtCa,EAAsB,EACtBC,EAAgB,WAIlB,OAHmBC,KAELA,KAAiB,IAG/B,SAASA,IACP,OAAOF,EAAsBD,EAAetY,OACxCsY,EAAeC,UAAyB9T,IAK5CiU,EAAoB,EAAGpE,EAAsB,EAK7CqE,EAAc,KAgElB,OA9DA/C,EAAmBhE,aAAY,SAAUM,GACvC,GAAoB,OAAhByG,EAAsB,CAGxB,KAAID,EAAoBxG,EAAQnF,eAMzB,CAIL,IACInH,GADAgT,EAAWN,EAAeC,IAAwB,IAClCM,OAAO,EAAG3G,EAAQlF,gBACRsH,GAO9B,OANAgE,EAAeC,GAAuBK,EAASC,OAAO3G,EAAQlF,gBAC1BsH,GACpCA,EAAsBpC,EAAQlF,gBAC9B8L,EAAmBH,EAAa/S,QAEhC+S,EAAczG,GAhBd4G,EAAmBH,EAAaH,KAChCE,IACApE,EAAsB,EAqB1B,KAAOoE,EAAoBxG,EAAQnF,eACjCsL,EAAK3O,IAAI8O,KACTE,IAEF,GAAIpE,EAAsBpC,EAAQlF,gBAAiB,CACjD,IAAI4L,EAAWN,EAAeC,IAAwB,GACtDF,EAAK3O,IAAIkP,EAASC,OAAO,EAAG3G,EAAQlF,kBACpCsL,EAAeC,GAAuBK,EAASC,OAAO3G,EAAQlF,iBAC9DsH,EAAsBpC,EAAQlF,gBAEhC2L,EAAczG,IACbxP,MAEC6V,EAAsBD,EAAetY,SACnC2Y,GAEFG,EAAmBH,EAAaH,KAGlCH,EAAK3O,IAAI4O,EAAeS,OAAOR,GAAqB7S,KAAK,MAI3DkQ,EAAmBzT,QAAQC,SAAQ,SAAU8T,GAC3C,IAAIpO,EAAU8N,EAAmBjB,iBAAiBuB,GACnC,MAAXpO,IACmB,MAAjBsQ,IACFlC,EAAatN,EAAKlD,KAAK0S,EAAelC,IAExCmC,EAAKjC,iBAAiBF,EAAYpO,OAI/BuQ,EAEP,SAASS,EAAmB5G,EAAStM,GACnC,GAAgB,OAAZsM,QAAuCzN,IAAnByN,EAAQnQ,OAC9BsW,EAAK3O,IAAI9D,OACJ,CACL,IAAI7D,EAASqW,EACTxP,EAAKlD,KAAK0S,EAAelG,EAAQnQ,QACjCmQ,EAAQnQ,OACZsW,EAAK3O,IAAI,IAAIkO,EAAW1F,EAAQ3B,aACR2B,EAAQ1B,eACRzO,EACA6D,EACAsM,EAAQ9N,UAWxCwT,EAAWjQ,UAAU+B,IAAM,SAAwBsP,GACjD,GAAIlT,MAAMmT,QAAQD,GAChBA,EAAO5W,SAAQ,SAAU8W,GACvBxW,KAAKgH,IAAIwP,KACRxW,UAEA,KAAIsW,EAAOrB,IAAmC,iBAAXqB,EAMtC,MAAM,IAAIrN,UACR,8EAAgFqN,GAN9EA,GACFtW,KAAKsV,SAAShX,KAAKgY,GAQvB,OAAOtW,MASTkV,EAAWjQ,UAAUwR,QAAU,SAA4BH,GACzD,GAAIlT,MAAMmT,QAAQD,GAChB,IAAK,IAAIjZ,EAAIiZ,EAAOhZ,OAAO,EAAGD,GAAK,EAAGA,IACpC2C,KAAKyW,QAAQH,EAAOjZ,QAGnB,KAAIiZ,EAAOrB,IAAmC,iBAAXqB,EAItC,MAAM,IAAIrN,UACR,8EAAgFqN,GAJlFtW,KAAKsV,SAAS1Q,QAAQ0R,GAOxB,OAAOtW,MAUTkV,EAAWjQ,UAAUyR,KAAO,SAAyBC,GAEnD,IADA,IAAIH,EACKnZ,EAAI,EAAG0J,EAAM/G,KAAKsV,SAAShY,OAAQD,EAAI0J,EAAK1J,KACnDmZ,EAAQxW,KAAKsV,SAASjY,IACZ4X,GACRuB,EAAME,KAAKC,GAGG,KAAVH,GACFG,EAAIH,EAAO,CAAEnX,OAAQW,KAAKX,OACboB,KAAMT,KAAKS,KACX0B,OAAQnC,KAAKmC,OACbT,KAAM1B,KAAK0B,QAYhCwT,EAAWjQ,UAAUjC,KAAO,SAAyB4T,GACnD,IAAIC,EACAxZ,EACA0J,EAAM/G,KAAKsV,SAAShY,OACxB,GAAIyJ,EAAM,EAAG,CAEX,IADA8P,EAAc,GACTxZ,EAAI,EAAGA,EAAI0J,EAAI,EAAG1J,IACrBwZ,EAAYvY,KAAK0B,KAAKsV,SAASjY,IAC/BwZ,EAAYvY,KAAKsY,GAEnBC,EAAYvY,KAAK0B,KAAKsV,SAASjY,IAC/B2C,KAAKsV,SAAWuB,EAElB,OAAO7W,MAUTkV,EAAWjQ,UAAU6R,aAAe,SAAiCC,EAAUC,GAC7E,IAAIC,EAAYjX,KAAKsV,SAAStV,KAAKsV,SAAShY,OAAS,GAUrD,OATI2Z,EAAUhC,GACZgC,EAAUH,aAAaC,EAAUC,GAEL,iBAAdC,EACdjX,KAAKsV,SAAStV,KAAKsV,SAAShY,OAAS,GAAK2Z,EAAU5Y,QAAQ0Y,EAAUC,GAGtEhX,KAAKsV,SAAShX,KAAK,GAAGD,QAAQ0Y,EAAUC,IAEnChX,MAUTkV,EAAWjQ,UAAUyO,iBACnB,SAAqCE,EAAaC,GAChD7T,KAAKuV,eAAerP,EAAKkB,YAAYwM,IAAgBC,GASzDqB,EAAWjQ,UAAUiS,mBACnB,SAAuCP,GACrC,IAAK,IAAItZ,EAAI,EAAG0J,EAAM/G,KAAKsV,SAAShY,OAAQD,EAAI0J,EAAK1J,IAC/C2C,KAAKsV,SAASjY,GAAG4X,IACnBjV,KAAKsV,SAASjY,GAAG6Z,mBAAmBP,GAIxC,IAAIlX,EAAU8B,OAAOuS,KAAK9T,KAAKuV,gBAC/B,IAASlY,EAAI,EAAG0J,EAAMtH,EAAQnC,OAAQD,EAAI0J,EAAK1J,IAC7CsZ,EAAIzQ,EAAKiR,cAAc1X,EAAQpC,IAAK2C,KAAKuV,eAAe9V,EAAQpC,MAQtE6X,EAAWjQ,UAAUrD,SAAW,WAC9B,IAAI+O,EAAM,GAIV,OAHA3Q,KAAK0W,MAAK,SAAUF,GAClB7F,GAAO6F,KAEF7F,GAOTuE,EAAWjQ,UAAUmS,sBAAwB,SAA0C1H,GACrF,IAAI2D,EAAY,CACdnQ,KAAM,GACNzC,KAAM,EACN0B,OAAQ,GAEN5C,EAAM,IAAIwT,EAAmBrD,GAC7B2H,GAAsB,EACtBC,EAAqB,KACrBC,EAAmB,KACnBC,EAAqB,KACrBC,EAAmB,KAqEvB,OApEAzX,KAAK0W,MAAK,SAAUF,EAAOlD,GACzBD,EAAUnQ,MAAQsT,EACM,OAApBlD,EAASjU,QACY,OAAlBiU,EAAS7S,MACW,OAApB6S,EAASnR,QACXmV,IAAuBhE,EAASjU,QAC7BkY,IAAqBjE,EAAS7S,MAC9B+W,IAAuBlE,EAASnR,QAChCsV,IAAqBnE,EAAS5R,MAClCnC,EAAIgU,WAAW,CACblU,OAAQiU,EAASjU,OACjBiU,SAAU,CACR7S,KAAM6S,EAAS7S,KACf0B,OAAQmR,EAASnR,QAEnBkR,UAAW,CACT5S,KAAM4S,EAAU5S,KAChB0B,OAAQkR,EAAUlR,QAEpBT,KAAM4R,EAAS5R,OAGnB4V,EAAqBhE,EAASjU,OAC9BkY,EAAmBjE,EAAS7S,KAC5B+W,EAAqBlE,EAASnR,OAC9BsV,EAAmBnE,EAAS5R,KAC5B2V,GAAsB,GACbA,IACT9X,EAAIgU,WAAW,CACbF,UAAW,CACT5S,KAAM4S,EAAU5S,KAChB0B,OAAQkR,EAAUlR,UAGtBmV,EAAqB,KACrBD,GAAsB,GAExB,IAAK,IAAI/P,EAAM,EAAGhK,EAASkZ,EAAMlZ,OAAQgK,EAAMhK,EAAQgK,IA3WxC,KA4WTkP,EAAM7N,WAAWrB,IACnB+L,EAAU5S,OACV4S,EAAUlR,OAAS,EAEfmF,EAAM,IAAMhK,GACdga,EAAqB,KACrBD,GAAsB,GACbA,GACT9X,EAAIgU,WAAW,CACblU,OAAQiU,EAASjU,OACjBiU,SAAU,CACR7S,KAAM6S,EAAS7S,KACf0B,OAAQmR,EAASnR,QAEnBkR,UAAW,CACT5S,KAAM4S,EAAU5S,KAChB0B,OAAQkR,EAAUlR,QAEpBT,KAAM4R,EAAS5R,QAInB2R,EAAUlR,YAIhBnC,KAAKkX,oBAAmB,SAAU1D,EAAYkE,GAC5CnY,EAAImU,iBAAiBF,EAAYkE,MAG5B,CAAExU,KAAMmQ,EAAUnQ,KAAM3D,IAAKA,IAGtCgF,EAAQ,EAAa2Q,G,aClYrB3Q,EAAQqI,OATR,SAAgB8C,EAAO2E,EAAOsD,GAC5B,GAAItD,KAAS3E,EACX,OAAOA,EAAM2E,GACR,GAAyB,IAArBxO,UAAUvI,OACnB,OAAOqa,EAEP,MAAM,IAAIjT,MAAM,IAAM2P,EAAQ,8BAKlC,IAAIuD,EAAY,iEACZC,EAAgB,gBAEpB,SAAS1F,EAAS2F,GAChB,IAAIha,EAAQga,EAAKha,MAAM8Z,GACvB,OAAK9Z,EAGE,CACLuU,OAAQvU,EAAM,GACdia,KAAMja,EAAM,GACZka,KAAMla,EAAM,GACZma,KAAMna,EAAM,GACZpC,KAAMoC,EAAM,IAPL,KAYX,SAASoa,EAAYC,GACnB,IAAIxa,EAAM,GAiBV,OAhBIwa,EAAW9F,SACb1U,GAAOwa,EAAW9F,OAAS,KAE7B1U,GAAO,KACHwa,EAAWJ,OACbpa,GAAOwa,EAAWJ,KAAO,KAEvBI,EAAWH,OACbra,GAAOwa,EAAWH,MAEhBG,EAAWF,OACbta,GAAO,IAAMwa,EAAWF,MAEtBE,EAAWzc,OACbiC,GAAOwa,EAAWzc,MAEbiC,EAeT,SAASsP,EAAUmL,GACjB,IAAI1c,EAAO0c,EACPza,EAAMwU,EAASiG,GACnB,GAAIza,EAAK,CACP,IAAKA,EAAIjC,KACP,OAAO0c,EAET1c,EAAOiC,EAAIjC,KAKb,IAHA,IAGS2c,EAHLlL,EAAa5I,EAAQ4I,WAAWzR,GAEhC4c,EAAQ5c,EAAKyH,MAAM,OACRoV,EAAK,EAAGlb,EAAIib,EAAMhb,OAAS,EAAGD,GAAK,EAAGA,IAEtC,OADbgb,EAAOC,EAAMjb,IAEXib,EAAMjC,OAAOhZ,EAAG,GACE,OAATgb,EACTE,IACSA,EAAK,IACD,KAATF,GAIFC,EAAMjC,OAAOhZ,EAAI,EAAGkb,GACpBA,EAAK,IAELD,EAAMjC,OAAOhZ,EAAG,GAChBkb,MAUN,MAJa,MAFb7c,EAAO4c,EAAMtV,KAAK,QAGhBtH,EAAOyR,EAAa,IAAM,KAGxBxP,GACFA,EAAIjC,KAAOA,EACJwc,EAAYva,IAEdjC,EAoBT,SAASsH,EAAKwV,EAAOJ,GACL,KAAVI,IACFA,EAAQ,KAEI,KAAVJ,IACFA,EAAQ,KAEV,IAAIK,EAAWtG,EAASiG,GACpBM,EAAWvG,EAASqG,GAMxB,GALIE,IACFF,EAAQE,EAAShd,MAAQ,KAIvB+c,IAAaA,EAASpG,OAIxB,OAHIqG,IACFD,EAASpG,OAASqG,EAASrG,QAEtB6F,EAAYO,GAGrB,GAAIA,GAAYL,EAAMta,MAAM+Z,GAC1B,OAAOO,EAIT,GAAIM,IAAaA,EAASV,OAASU,EAAShd,KAE1C,OADAgd,EAASV,KAAOI,EACTF,EAAYQ,GAGrB,IAAIC,EAA6B,MAApBP,EAAMxP,OAAO,GACtBwP,EACAnL,EAAUuL,EAAMna,QAAQ,OAAQ,IAAM,IAAM+Z,GAEhD,OAAIM,GACFA,EAAShd,KAAOid,EACTT,EAAYQ,IAEdC,EAvITpU,EAAQ4N,SAAWA,EAsBnB5N,EAAQ2T,YAAcA,EAwDtB3T,EAAQ0I,UAAYA,EA2DpB1I,EAAQvB,KAAOA,EAEfuB,EAAQ4I,WAAa,SAAUiL,GAC7B,MAA2B,MAApBA,EAAMxP,OAAO,IAAcgP,EAAUzZ,KAAKia,IAyCnD7T,EAAQ6I,SAhCR,SAAkBoL,EAAOJ,GACT,KAAVI,IACFA,EAAQ,KAGVA,EAAQA,EAAMna,QAAQ,MAAO,IAO7B,IADA,IAAIua,EAAQ,EAC0B,IAA/BR,EAAMjX,QAAQqX,EAAQ,MAAY,CACvC,IAAI9O,EAAQ8O,EAAMK,YAAY,KAC9B,GAAInP,EAAQ,EACV,OAAO0O,EAOT,IADAI,EAAQA,EAAMta,MAAM,EAAGwL,IACb5L,MAAM,qBACd,OAAOsa,IAGPQ,EAIJ,OAAOxV,MAAMwV,EAAQ,GAAG5V,KAAK,OAASoV,EAAMjC,OAAOqC,EAAMlb,OAAS,IAIpE,IAAIwb,IAEO,cADCvX,OAAOmF,OAAO,OAI1B,SAASqS,EAAUvL,GACjB,OAAOA,EA8BT,SAASwL,EAAcxL,GACrB,IAAKA,EACH,OAAO,EAGT,IAAIlQ,EAASkQ,EAAElQ,OAEf,GAAIA,EAAS,EACX,OAAO,EAGT,GAAiC,KAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,KAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,MAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,MAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,MAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,MAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,MAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,KAA7BkQ,EAAE7E,WAAWrL,EAAS,IACO,KAA7BkQ,EAAE7E,WAAWrL,EAAS,GACxB,OAAO,EAGT,IAAK,IAAID,EAAIC,EAAS,GAAID,GAAK,EAAGA,IAChC,GAAwB,KAApBmQ,EAAE7E,WAAWtL,GACf,OAAO,EAIX,OAAO,EAgFT,SAAS4b,EAAOC,EAAOC,GACrB,OAAID,IAAUC,EACL,EAGK,OAAVD,EACK,EAGK,OAAVC,GACM,EAGND,EAAQC,EACH,GAGD,EAzIV5U,EAAQ6C,YAAc0R,EAAoBC,EAP1C,SAAqB7R,GACnB,OAAI8R,EAAc9R,GACT,IAAMA,EAGRA,GAWT3C,EAAQ4S,cAAgB2B,EAAoBC,EAP5C,SAAuB7R,GACrB,OAAI8R,EAAc9R,GACTA,EAAKhJ,MAAM,GAGbgJ,GAwET3C,EAAQuL,2BA5BR,SAAoCnF,EAAUC,EAAUwO,GACtD,IAAInP,EAAMgP,EAAOtO,EAAStL,OAAQuL,EAASvL,QAC3C,OAAY,IAAR4K,GAKQ,KADZA,EAAMU,EAASkD,aAAejD,EAASiD,eAM3B,KADZ5D,EAAMU,EAASmD,eAAiBlD,EAASkD,iBACxBsL,GAKL,KADZnP,EAAMU,EAASL,gBAAkBM,EAASN,kBAM9B,KADZL,EAAMU,EAASN,cAAgBO,EAASP,eAlB/BJ,EAuBFgP,EAAOtO,EAASjJ,KAAMkJ,EAASlJ,OAyCxC6C,EAAQ8M,oCA5BR,SAA6C1G,EAAUC,EAAUyO,GAC/D,IAAIpP,EAAMU,EAASN,cAAgBO,EAASP,cAC5C,OAAY,IAARJ,GAKQ,KADZA,EAAMU,EAASL,gBAAkBM,EAASN,kBACzB+O,GAKL,KADZpP,EAAMgP,EAAOtO,EAAStL,OAAQuL,EAASvL,UAM3B,KADZ4K,EAAMU,EAASkD,aAAejD,EAASiD,eAM3B,KADZ5D,EAAMU,EAASmD,eAAiBlD,EAASkD,gBAlBhC7D,EAuBFgP,EAAOtO,EAASjJ,KAAMkJ,EAASlJ,OAwDxC6C,EAAQ0G,oCA5BR,SAA6CN,EAAUC,GACrD,IAAIX,EAAMU,EAASN,cAAgBO,EAASP,cAC5C,OAAY,IAARJ,GAKQ,KADZA,EAAMU,EAASL,gBAAkBM,EAASN,kBAM9B,KADZL,EAAMgP,EAAOtO,EAAStL,OAAQuL,EAASvL,UAM3B,KADZ4K,EAAMU,EAASkD,aAAejD,EAASiD,eAM3B,KADZ5D,EAAMU,EAASmD,eAAiBlD,EAASkD,gBAlBhC7D,EAuBFgP,EAAOtO,EAASjJ,KAAMkJ,EAASlJ,OAYxC6C,EAAQiI,oBAHR,SAA6BmE,GAC3B,OAAO2D,KAAKgF,MAAM3I,EAAItS,QAAQ,iBAAkB,MAuDlDkG,EAAQkJ,iBA/CR,SAA0BX,EAAYyM,EAAWC,GA8B/C,GA7BAD,EAAYA,GAAa,GAErBzM,IAEwC,MAAtCA,EAAWA,EAAWxP,OAAS,IAA+B,MAAjBic,EAAU,KACzDzM,GAAc,KAOhByM,EAAYzM,EAAayM,GAiBvBC,EAAc,CAChB,IAAIC,EAAStH,EAASqH,GACtB,IAAKC,EACH,MAAM,IAAI/U,MAAM,oCAElB,GAAI+U,EAAO/d,KAAM,CAEf,IAAIgO,EAAQ+P,EAAO/d,KAAKmd,YAAY,KAChCnP,GAAS,IACX+P,EAAO/d,KAAO+d,EAAO/d,KAAKge,UAAU,EAAGhQ,EAAQ,IAGnD6P,EAAYvW,EAAKkV,EAAYuB,GAASF,GAGxC,OAAOtM,EAAUsM,K,eCheU,UAC7BhV,EAAQ,GAAoB,WACP","file":"dependencies.js","sourcesContent":["require('./').install();\n","var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(process.version) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  process.exit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n"],"sourceRoot":""}